
zookeeper=文件系统+通知机制
文件系统：zk存储和管理大家都关心的数据
通知机制：zk接收观察者的注册，一旦存储的数据发生变化，就通知观察者

zk特点
zk集群由1个leader和多个follower组成，leader负责读写请求，follower负责读请求
集群中只要有半数以上（刚好半数不行）节点存活，zk就能对外提供服务。所以zk适合安装在奇数个数的服务器上
全局数据一致：每个节点的数据相同
更新请求顺序执行，即来自同一个客户端的请求按照发送顺序依次执行
数据更新原子性：一次数据更新要么成功，要么失败
实时性：在一段时间内，client能读取到最新的数据

数据结构
与unix很类似，都是树形结构，每个znode默认能存储1mb的数据（这意味着zk不能存储海量数据，只能存储配置信息）

应用场景
统一命名服务：分布式环境下，经常需要对应用/服务进行统一命名，方便管理
统一配置管理：分布式环境下，一般要求一个集群下所有节点的配置信息一致；对配置修改后，希望尽快同步到各个节点。实现：znode节点保存配置信息，各个客户端监听这个znode
统一集群管理：分布式环境下，实时掌握节点的状态是很重要的，可以根据节点状态进行实时调整。实现：将节点信息写入znode，监听该node即可获取它的实时状态变化
服务器节点动态上下线
软负载均衡等

写数据
如果客户端连接的是follower，且是写请求，则follower把请求转发给leader。如果客户端连接的是leader，则leader直接处理
leader收到写请求后，自己先执行，然后让其他follower执行，等待返回。超过半数（不能是刚好半数）节点（包括leader自己）都写完并应答后，leader向客户端返回成功（或返回给follower，由follower返回给客户端）
其他未写完的follower继续写，写完应答给leader
